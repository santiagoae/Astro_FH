---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { IPokemonList } from "@interfaces/pokemon-list.interface";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

//listado de paginas permitidas, crea en estado de compilacion y si no tira 404
/**este codigo es escrito de manera estatica por eso se llama getStaticPaths
 * y hay que nombrar cuales son los params y las props permitidas,
 * de esta forma se generan todas las paginas antes de que cargue la pagina actual
 */
export const getStaticPaths = (async () => {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await res.json()) as IPokemonList;
  return results.map(({ name, url }) => ({
    params: { name },
    props: { url: url, name },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = String(url).split("/").at(-2);
const cries = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title=`#${id} pokemon: ${name}`
  description=`Informacion sobre el pokemon ${name}`
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex">
      <div>
        <button class="text-blue-500" onclick="history.back()">Regresar</button>
        <Title>{name}</Title>
      </div>

      <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
        <Icon data-outline name="heart-outline" size={50} />
        <Icon data-full class="hidden" name="heart-full" size={50} />
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig={true} />

    <audio controls class="mt-5">
      <source src={cries} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
  </section>
</MainLayout>

<script>
  import type { IFavoritePokemons } from "@interfaces/IFavoritePokemons";

  const handlePageLoad = () => {
    const btnFavorite = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavorite) return;

    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;
    const heartFull = btnFavorite.querySelector("[data-full]") as HTMLElement;
    const name = btnFavorite.dataset.name ?? "";
    const id = btnFavorite.dataset.id ?? "";
    let favorites: IFavoritePokemons[] = JSON.parse(
      localStorage.getItem("favorites") ?? "[]"
    );
    const isFavorite = favorites.some((fav) => fav.name === name);

    const toggleHeart = () => {
      heartOutline.classList.toggle("hidden");
      heartFull.classList.toggle("hidden");
    };

    if (isFavorite) toggleHeart();

    const toggleFavorites = () => {
      if (isFavorite) {
        favorites = favorites.filter((fav) => fav.name !== name);
      } else {
        favorites.push({ id: +id, name });
      }

      localStorage.setItem("favorites", JSON.stringify(favorites));
    };

    btnFavorite.addEventListener("click", () => {
      toggleHeart();
      toggleFavorites();
    });
  };

  document.addEventListener("astro:page-load", handlePageLoad);
</script>

<style>
  a {
    @apply hover:underline text-blue-500;
  }

  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
